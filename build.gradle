buildscript {
    repositories {
		maven { url = 'https://maven.minecraftforge.net' }
		maven { url = 'https://repo.spongepowered.org/repository/maven-public/' }
		mavenCentral()
		maven { url = 'https://maven.parchmentmc.org' }
	}
	dependencies {
		classpath group: 'net.minecraftforge.gradle', name: 'ForgeGradle', version: '5.1.+', changing: true
		classpath group: 'org.spongepowered', name: 'mixingradle', version: '0.7-SNAPSHOT'
		classpath "org.parchmentmc:librarian:1.+"
	}
}

apply plugin: 'net.minecraftforge.gradle'
apply plugin: 'eclipse'
apply plugin: 'maven-publish'
apply from: 'https://raw.githubusercontent.com/SizableShrimp/Forge-Class-Remapper/main/classremapper.gradle'
apply plugin: 'org.parchmentmc.librarian.forgegradle'

version = '3.0.3'
group = 'melonslise.locks'
archivesBaseName = 'locks'

java.toolchain.languageVersion = JavaLanguageVersion.of(17)

minecraft {
	mappings channel: 'parchment', version: "$parchment_version-$minecraft_version"

	accessTransformer = file('src/main/resources/META-INF/accesstransformer.cfg')

	runs {
		client {
			workingDirectory project.file('run')

			arg "-mixin.config=" + archivesBaseName + ".mixins.json"

			property 'forge.logging.console.level', 'info'

			mods {
				locks {
					source sourceSets.main
				}
			}
		}

		server {
			workingDirectory project.file('run')

			arg "-mixin.config=" + archivesBaseName + ".mixins.json"

			property 'forge.logging.console.level', 'info'

			mods {
				locks {
					source sourceSets.main
				}
			}
		}

		data {
			workingDirectory project.file('run')

			property 'forge.logging.console.level', 'info'

			args '--mod', 'locks', '--all', '--output', file('src/generated/resources/'), '--existing', file('src/main/resources/')

			mods {
				locks {
					source sourceSets.main
				}
			}
		}
	}
}

sourceSets.main.resources { srcDir 'src/generated/resources' }

dependencies {
	minecraft "net.minecraftforge:forge:$minecraft_version-$forge_version"
	annotationProcessor 'org.spongepowered:mixin:0.8.5:processor'
}

jar {
	manifest {
		attributes([
			"Specification-Title": archivesBaseName,
			"Specification-Vendor": "melonslise",
			"Specification-Version": version,
			"Implementation-Title": archivesBaseName,
			"Implementation-Version": version,
			"Implementation-Vendor" :"melonslise",
			"Implementation-Timestamp": new Date().format("yyyy-MM-dd'T'HH:mm:ssZ"),
			"MixinConfigs": archivesBaseName + ".mixins.json"
		])
	}
}

apply plugin: 'org.spongepowered.mixin'

mixin {
    add sourceSets.main, archivesBaseName + ".refmap.json"
}